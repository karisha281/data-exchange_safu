&НаСервере
Процедура СброситьВсеЗарегистрированныеНаСервере()
	
	Узлы = Новый Массив;
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ОбменМеждуСистемамиБронирования.Ссылка КАК Ссылка
	             |ИЗ
	             |	ПланОбмена.ОбменМеждуСистемамиБронирования КАК ОбменМеждуСистемамиБронирования
	             |ГДЕ
	             |	НЕ ОбменМеждуСистемамиБронирования.ЭтотУзел";   
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл   
		
		Узлы.Добавить(Выборка.Ссылка);
		
	КонецЦикла;	
	
	Объекты = Новый Массив;
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	Бронирование.Ссылка КАК Ссылка
	             |ИЗ
	             |	Документ.Бронирование КАК Бронирование";   
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл   
		
		Объекты.Добавить(Выборка.Ссылка);
		
	КонецЦикла;	     
	
	ПланыОбмена.УдалитьРегистрациюИзменений(Узлы, Объекты);  

		
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьВсеЗарегистрированные(Команда)
	СброситьВсеЗарегистрированныеНаСервере();
КонецПроцедуры

&НаСервере
Функция ВыгрузитьДанныеXML(ФайлXML)
	
	Поток = Новый ПотокВПамяти;	
	
	//Запись сообщения заголовков обмена XML
		
	Запись = Новый ЗаписьXML;
	Запись.ОткрытьПоток(Поток);         
	
	ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
	ЗаписьСообщения.НачатьЗапись(Запись, Получатель);        	
	
	ЗаписьСообщения.ЗакончитьЗапись();	  
	Запись.Закрыть();     
	
	
	//Создание временного файла и помещение в него двоичных данных   
	
	//Имя файла
	ИмяФайла =  "Заголовки сообщений обмена";
	
	//Определение пути файла, полного имени
	Каталог = КаталогВременныхФайлов();
	
	ФайлXML = Каталог + ИмяФайла + ".xml"; 
	
	//Файл = ПолучитьИмяВременногоФайла("xml");
	
	//Получение двоичных данных
	ДвоичныеДанные = Поток.ЗакрытьИПолучитьДвоичныеДанные();
	
	//Запись двоичных данных во временный файл
	ДвоичныеДанные.Записать(ФайлXML); 
	
	Возврат ФайлXML;
	
	
КонецФункции    
&НаСервере
Функция ВыгрузитьДанныеXLSX(ФайлXLSX)

	ТабДок1 = Новый ТабличныйДокумент;
	ТабДок2 = Новый ТабличныйДокумент;
	ТабДок3 = Новый ТабличныйДокумент;
	
	ТабДок = Обработки.УправлениеОбменом.ПолучитьМакет("Макет");  
	ОбластьПараметров = ТабДок.ПолучитьОбласть("Номера");  
	ОбластьПараметров2 = ТабДок.ПолучитьОбласть("Постояльцы");
	ОбластьПараметров3 = ТабДок.ПолучитьОбласть("Бронь");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТипыНомеров.Код КАК Код,
	|	ТипыНомеров.Наименование КАК Наименование,
	|	ТипыНомеров.Количество КАК Количество,
	|	ТипыНомеров.Цена КАК Цена,
	|	ТипыНомеров.Описание КАК Описание
	|ИЗ
	|	Справочник.ТипыНомеров КАК ТипыНомеров";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Стр из Результат Цикл 
		
		ОбластьПараметров.Параметры.Код = Стр.Код;
		ОбластьПараметров.Параметры.Наименование = Стр.Наименование;
		ОбластьПараметров.Параметры.Количество = Стр.Количество;  
		ОбластьПараметров.Параметры.Цена = Стр.Цена;
		ОбластьПараметров.Параметры.Описание = Стр.Описание;  
		
		ТабДок1.Вывести(ОбластьПараметров); 
		
	КонецЦикла; 	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Постояльцы.Код КАК Код,
	|	Постояльцы.Наименование КАК Наименование,
	|	Постояльцы.Телефон КАК Телефон,
	|	Постояльцы.АдресЭлектроннойПочты КАК АдресЭлектроннойПочты,
	|	Постояльцы.Пол КАК Пол,
	|	Постояльцы.ДатаРождения КАК ДатаРождения
	|ИЗ
	|	Справочник.Постояльцы КАК Постояльцы";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Стр из Результат Цикл 
		
		ОбластьПараметров2.Параметры.Код = Стр.Код;
		ОбластьПараметров2.Параметры.ФИО = Стр.Наименование;
		ОбластьПараметров2.Параметры.Телефон = Стр.Телефон;  
		ОбластьПараметров2.Параметры.АдресЭлектроннойПочты = Стр.АдресЭлектроннойПочты;
		ОбластьПараметров2.Параметры.Пол = Стр.Пол;
		ОбластьПараметров2.Параметры.ДатаРождения = Стр.ДатаРождения;    
		
		ТабДок2.Вывести(ОбластьПараметров2); 
		
	КонецЦикла;                      
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Бронирование.Номер КАК Номер,
	|	Бронирование.ДатаЗаезда КАК ДатаЗаезда,
	|	Бронирование.ДатаВыезда КАК ДатаВыезда,
	|	Бронирование.ТипНомера КАК ТипНомера,
	|	Бронирование.ЗавтракВключен КАК ЗавтракВключен,
	|	БронированиеПостояльцы.Постоялец КАК Постоялец
	|ИЗ
	|	Документ.Бронирование.Постояльцы КАК БронированиеПостояльцы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Бронирование КАК Бронирование
	|		ПО БронированиеПостояльцы.Ссылка = Бронирование.Ссылка";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Стр из Результат Цикл 
		
		ОбластьПараметров3.Параметры.Номер = Стр.Номер;
		ОбластьПараметров3.Параметры.ДатаЗаезда = Стр.ДатаЗаезда;
		ОбластьПараметров3.Параметры.ДатаВыезда = Стр.ДатаВыезда;  
		ОбластьПараметров3.Параметры.ТипНомера = Стр.ТипНомера.Код;
		ОбластьПараметров3.Параметры.Постоялец = Стр.Постоялец.Код; 
		ОбластьПараметров3.Параметры.ЗавтракВключен = Стр.ЗавтракВключен;    
		
		ТабДок3.Вывести(ОбластьПараметров3); 
		
	КонецЦикла;  
	
	ТабДок.Присоединить(ТабДок1);		
	ТабДок.Присоединить(ТабДок2); 
	ТабДок.Присоединить(ТабДок3); 
		
	ИмяФайла =  "Данные сообщения обмена";
	
	//Определение пути файла, полного имени
	Каталог = КаталогВременныхФайлов();
	
	ФайлXLSX = Каталог + ИмяФайла + ".xlsx"; 
	
	//Файл = ПолучитьИмяВременногоФайла("xml");  
	
	ТабДок.Записать(ФайлXLSX, ТипФайлаТабличногоДокумента.XLSX);
	
	Возврат ФайлXLSX;


КонецФункции 

&НаСервере
Функция ПоместитьФайлыВZIPНаСервере()


	Поток = Новый ПотокВПамяти;   
	
	ФайлXML = ВыгрузитьДанныеXML(ФайлXML);
	ФайлXLSX = ВыгрузитьДанныеXLSX(ФайлXLSX);
	
	ФайлАрхива = Новый ЗаписьZipФайла;;
	ФайлАрхива.Открыть(Поток);   
	ФайлАрхива.Добавить(ФайлXML);
	ФайлАрхива.Добавить(ФайлXLSX);
	ФайлАрхива.Записать(); 
		
	Возврат ПоместитьВоВременноеХранилище(Поток.ЗакрытьИПолучитьДвоичныеДанные()); 
			
Конецфункции

&НаКлиенте
Процедура ПоместитьФайлыВZIP(Команда) 
	
	Если Получатель.Пустая() Тогда  
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Получатель должен быть заполнен";
		Сообщение.Поле = "Получатель";
		Сообщение.Сообщить();  
		
		Возврат;  
		
	КонецЕсли;
	
	АдресДанных = ПоместитьФайлыВZIPНаСервере();; 
	
	ПараметрыДиалога = Новый ПараметрыДиалогаПолученияФайлов;  
	
	ПолучитьФайлССервераАсинх(АдресДанных, "Обмен данными.zip", ПараметрыДиалога);   
	
КонецПроцедуры      

&НаСервере
Процедура ЗагрузитьДанныеИзZIPНаСервере(Адрес)
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);  
	
	Поток = ДвоичныеДанные.ОткрытьПотокДляЧтения();
	
	ОбменДанными = ПолучитьИмяВременногоФайла("");
	СоздатьКаталог(ОбменДанными);
	
	Архив = Новый ЧтениеZipФайла(Поток);   
	Архив.ИзвлечьВсе(ОбменДанными);
	Архив.Закрыть();	           
	
	//Создание временного каталога и перебор файлов
	Файлы = НайтиФайлы(ОбменДанными, "*.*"); 
	
	Для Каждого Файл из Файлы Цикл 
		
		Если Файл.Расширение = ".xlsx" Тогда
			ИмяФайлаЭксель = Файл.ПолноеИмя;  
			
			ТабДок = Новый ТабличныйДокумент;
			
			ТабДок.Прочитать(ИмяФайлаЭксель);    
			
			КоличествоСтрок = ТабДок.ВысотаТаблицы;
			КоличествоКолонок = ТабДок.ШиринаТаблицы;
			
			Для НомерСтроки = 3 По КоличествоСтрок Цикл      
				
				//Заполнение справочника Постояльцы
				Постояльцы  = Справочники.Постояльцы.СоздатьЭлемент(); 
				Постояльцы.Код = ТабДок.Область(НомерСтроки, 6).Текст;  
			    Постояльцы.Наименование = ТабДок.Область(НомерСтроки, 7).Текст;   
				Постояльцы.Телефон = ТабДок.Область(НомерСтроки, 8).Текст; 
				Постояльцы.АдресЭлектроннойПочты = ТабДок.Область(НомерСтроки, 9).Текст; 
				
				Постояльцы.Пол = ТабДок.Область(НомерСтроки, 10).Текст;    
				Если ТабДок.Область(НомерСтроки, 10).Текст = "Мужской" Тогда
					Постояльцы.Пол = Перечисления.ПолФизическихЛиц.Мужской;
				ИначеЕсли ТабДок.Область(НомерСтроки, 10).Текст = "Женский" Тогда
					Постояльцы.Пол = Перечисления.ПолФизическихЛиц.Женский;
				КонецЕсли; 
				
				Постояльцы.ДатаРождения = ТабДок.Область(НомерСтроки, 11).Текст; 
				
				СущПостоялецСсылка = Справочники.Постояльцы.НайтиПоКоду(Постояльцы.Код);
				Если НЕ СущПостоялецСсылка.Пустая() Тогда
					СущПостоялец = СущПостоялецСсылка.ПолучитьОбъект();
					СущПостоялец.Наименование = Постояльцы.Наименование;
					СущПостоялец.Телефон = Постояльцы.Телефон;
					СущПостоялец.АдресЭлектроннойПочты = Постояльцы.АдресЭлектроннойПочты;
					СущПостоялец.Пол = Постояльцы.Пол;
					СущПостоялец.ДатаРождения = Постояльцы.ДатаРождения;
					СущПостоялец.Записать();
				Иначе
					Постояльцы.Записать();
				КонецЕсли;
				
				
					//Заполнение справочника ТипыНомеров
				ТипыНомеров  = Справочники.ТипыНомеров.СоздатьЭлемент();
				ТипыНомеров.Код = ТабДок.Область(НомерСтроки, 1).Текст;  
				ТипыНомеров.Наименование = ТабДок.Область(НомерСтроки, 2).Текст;   
				ТипыНомеров.Количество = ТабДок.Область(НомерСтроки, 3).Текст; 
				ТипыНомеров.Цена = ТабДок.Область(НомерСтроки, 4).Текст;  
				ТипыНомеров.Описание = ТабДок.Область(НомерСтроки, 5).Текст;
				
				СущТипНомераСсылка = Справочники.ТипыНомеров.НайтиПоКоду(ТипыНомеров.Код);
				Если НЕ СущТипНомераСсылка.Пустая() Тогда
					СущТипНомера = СущТипНомераСсылка.ПолучитьОбъект();
					СущТипНомера.Наименование = ТипыНомеров.Наименование;
					СущТипНомера.Количество = ТипыНомеров.Количество;
					СущТипНомера.Цена = ТипыНомеров.Цена;
					СущТипНомера.Описание = ТипыНомеров.Описание;
					СущТипНомера.Записать();
				Иначе
					Если ЗначениеЗаполнено(ТипыНомеров.Наименование) Тогда
						ТипыНомеров.Записать();
					КонецЕсли; 
					
				КонецЕсли;
				
				//Заполнение документа Бронирование
				Бронирования  = Документы.Бронирование.СоздатьДокумент(); 
				Бронирования.Дата = ТекущаяДата();    
				Бронирования.Номер = ТабДок.Область(НомерСтроки, 12).Текст; 
				Бронирования.ДатаЗаезда = ТабДок.Область(НомерСтроки, 13).Текст;   
				Бронирования.ДатаВыезда = ТабДок.Область(НомерСтроки, 14).Текст;  
				Бронирования.ЗавтракВключен = ТабДок.Область(НомерСтроки, 16).Текст; 
				
				Бронирования.ТипНомера = Справочники.ТипыНомеров.НайтиПоКоду(ТабДок.Область(НомерСтроки, 15).Текст);
							
				ПостоялецБрони = Бронирования.Постояльцы.Добавить(); 
				ПостоялецБрони.Постоялец =  Справочники.Постояльцы.НайтиПоКоду(ТабДок.Область(НомерСтроки, 17).Текст);
				
				СущБроньСсылка = Документы.Бронирование.НайтиПоНомеру(Бронирования.Номер);
				Если НЕ СущБроньСсылка.Пустая() Тогда
					СущБронь = СущБроньСсылка.ПолучитьОбъект();
					СущБронь.ДатаЗаезда = Бронирования.ДатаЗаезда;
					СущБронь.ДатаВыезда = Бронирования.ДатаВыезда;
					СущБронь.ТипНомера = Бронирования.ТипНомера; 
			
					СущПростоялецБрони =  Бронирования.Постояльцы.Добавить();
					СущПростоялецБрони.Постоялец = ПостоялецБрони.Постоялец;
					
					СущБронь.Записать();
				Иначе
					Бронирования.Записать();
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
	         
		
		Если Файл.Расширение = ".xml" Тогда
			
			ИмяФайлаОбмена = Файл.ПолноеИмя; 
			
			Чтение = Новый ЧтениеXML;
			Чтение.ОткрытьФайл(ИмяФайлаОбмена); 
			
			ЧтениеСообщения = ПланыОбмена.СоздатьЧтениеСообщения();
			ЧтениеСообщения.НачатьЧтение(Чтение, ДопустимыйНомерСообщения.Любой); 
				
			ЧтениеСообщения.ЗакончитьЧтение();
			Чтение.Закрыть(); 
	
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ЗагрузитьДанныеИзZIP(Команда)
	
	ПараметрыДиалога =  Новый ПараметрыДиалогаПомещенияФайлов;  
	
	ПараметрыДиалога.Фильтр = "Обмен данными|*.zip;";
	
	Результат = Ждать ПоместитьФайлНаСерверАсинх(,,, ПараметрыДиалога);
	
	ЗагрузитьДанныеИзZIPНаСервере(Результат.Адрес);   
	
	Сообщить("Данные ZIP выгружены"); 

КонецПроцедуры



